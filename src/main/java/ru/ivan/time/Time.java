/* Решение заданий № 1.4
* Время. Создайте сущность Время, которое будет описывать текущее время суток в 24-х часовом формате. Время описывается числом секунд, прошедшим с начала суток. Время может быть приведено к текстовой форме следующего формата: “ЧЧ:ММ:СС”. Например, если время задано как 12000, то текстовая форма будет “3:20:00”. Если общее время превышает 24 часа, то отображаться в текстовом виде должно только то время, которое прошло с начала последних суток, например 91800, это не 25:30:00, а 1:30:00.
* Необходимо создать и вывести на экран текстовую форму для следующих вариантов времени:
* 10 секунд
* 10000 секунд
* 100000 секунд
* Задание 4.4
* Создаем Время.
* Измените сущность Время из задачи 1.4. Новые требования включают:
* Время можно создать, указав количество секунд с начала суток
* Время можно создать, указав количество часов, минут, секунд текущего времени.
* Гарантируйте, что операция присвоения в инициализаторах будет использована не более одного раза
* Необходимо создать и вывести на экран текстовую форму для следующих вариантов времени:
* 1. 10000 секунд
* 2. 2 часа, 3 минуты, 5 секунд
* Задание 5.4
* Сколько сейчас времени?
* Измените сущность Время из задачи 4.4. Добавьте ей возможность возвращать следующие сведения:
* Какой сейчас час (целое число)Сколько минут прошло с начала текущего часа (целое число)
* Сколько секунд прошло с начала текущей минуты (целое число)
* Необходимо выполнить следующие задачи:
* 1. Вывести на экран сколько часов соответствуют времени 34056
* 2. Вывести на экран сколько минут соответствуют времени 4532
* 3. Вывести на экран сколько секунд соответствуют времени 123.

* */

package ru.ivan.time;

public class Time {
    private final int seconds;

    public Time(int seconds) {
        if (seconds < 0) {
            System.out.println("Invalid input: time cannot be negative.");
            this.seconds = 0;
            return;
        }
        this.seconds = seconds;
    }

    public Time(int hours, int minutes, int seconds) {
        if (hours < 0 || minutes < 0 || seconds < 0) {
            System.out.println("Invalid input: time cannot be negative.");
            this.seconds = 0;
            return;
        }
        if (hours >= 24 || minutes >= 60 || seconds >= 60) {
            System.out.println("Invalid input: time values are out of range.");
            this.seconds = 0;
            return;
        }
        this.seconds = hours * 3600 + minutes * 60 + seconds;
    }


    public int getHours() {
        return (int) (seconds / 3600) % 24;
    }


    public int getMinutes() {
        return (int) (seconds / 60) % 60;
    }

    public int getSeconds() {
        return (int) seconds % 60;
    }

    @Override
    public String toString() {
        long totalSeconds = this.seconds % (24 * 3600);
        long hours = totalSeconds / 3600;
        long minutes = (totalSeconds % 3600) / 60;
        long seconds = totalSeconds % 60;

        return String.format("%02d:%02d:%02d", hours, minutes, seconds);
    }

}